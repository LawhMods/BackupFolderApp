using Tools;
Tls tls = new Tls();

Console.Title = "KeepBackup";

string pathOrigin;
string pathBackup = tls.GetInstall() + "\\Backups";
string fileConfig = tls.GetInstall() + "\\config.cfg";

int checkInterval = 10;

DateTime dateTimeBackup;
DateTime dateTimeOrigin;

DirectoryInfo dirInfoBackup;
DirectoryInfo dirInfoOrigin;

FileInfo fileInfo;

tls.Intro();

//Get path to folder you wish to create a backup of
while (true)
{
    //Make sure there is a directory for the backups
    if (tls.DirIs(pathBackup))
    {
        tls.Msg("Backup directory healthy.");
    }
    else
    {
        Directory.CreateDirectory(pathBackup);
        tls.Msg("Backup directory created at app executable file.");
    }
    //Check for origin directory in a file - create it if does not exist
    if (tls.Is(fileConfig))
    {
        pathOrigin = tls.Read(fileConfig);
    }
    else
    {
        pathOrigin = tls.Input("Path to folder you wish to keep a backup of: ", "\"");
    }
    if (tls.DirIs(pathOrigin))
    {
        tls.Msg("Path to origin healthy.\n");
        break;
    }
    else
    {
        pathOrigin = tls.Input("Path to origin does not exist.\nPaste the origin path here:", "\"");
        tls.Write(fileConfig, pathOrigin);
    }
}
Console.Clear();

//App loop
while (true)
{
    dirInfoBackup = new DirectoryInfo(pathBackup);
    dirInfoOrigin = new DirectoryInfo(pathOrigin);

    dateTimeBackup = dirInfoBackup.LastWriteTime;
    dateTimeOrigin = dirInfoOrigin.LastWriteTime;

    int compare = DateTime.Compare(dateTimeBackup, dateTimeOrigin);

    //tls.Msg($"Compare: {compare}");

    if (compare < 0)//Date for backup is earlier than date for origin
    {
        string[] files = Directory.GetFiles(pathOrigin);

        //tls.Msg(files);

        for (int i = 0; i < files.Length; i++)
        {
            fileInfo = new FileInfo(files[i]);
            compare = DateTime.Compare(dateTimeBackup, fileInfo.LastWriteTime);

            //tls.Msg($"Compare 2: {compare}");

            if (compare < 0)
            {
                string pathTo = pathBackup + "\\" + fileInfo.Name;
                while (true)
                {
                    if (tls.Is(pathTo))
                    {
                        if (pathTo.Contains("_Backup"))
                        {
                            string digits = tls.GetFromPosUntilEnd("_Backup", pathTo.Replace(fileInfo.Extension, ""));
                            int value = tls.GetIntegerFromDigits(digits);
                            value++;
                            pathTo = pathTo.Replace("_Backup" + digits, "_Backup" + value.ToString());
                        }
                        else
                        {
                            pathTo = pathTo.Replace(fileInfo.Extension, "_Backup1" + fileInfo.Extension);
                            tls.Msg("Tagged file to avoid overwriting.", 0);
                        }
                    }
                    else
                    {
                        File.Copy(files[i], pathTo);
                        tls.Msg("File copied to backup.\n", 0);
                        break;
                    }
                }
            }
        }
    }
    tls.Loading(checkInterval, "Waiting until check");
}
